/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

package ${target.javaPackageFromFolder($SRC)};

import $entity.fullName ;

import org.springframework.data.repository.CrudRepository;

#if( ! $entity.hasPrimaryKey() ) 
#error( "Primary Key required!" ) 
#elseif ($entity.hasCompositePrimaryKey())
#set($keyObjectType = "${entity.name}Key")
import ${entity.fullName}Key ;
#else
#foreach ($field in $entity.keyAttributes)
#set($keyObjectType = $field.wrapperType)
#end
#end
#set($existManyToOne = "false")
#if ($fn.size($entity.selectedLinks) > 0 )
#foreach( $link in $entity.selectedLinks )
#if ($link.isCardinalityManyToOne())
import $ENTITY_PKG.$link.javaTypeFull;
#set($existManyToOne = "true")
#end
#end
#end
#if($existManyToOne == true)
import java.util.List;
import org.springframework.data.repository.query.Param;
import org.springframework.data.rest.core.annotation.RestResource;
#end



/**
 * Spring JPA Repository for ${entity.name}
 * 
 * @author Telosys Tools Generator
 *
 */
public interface ${entity.name}Repository extends CrudRepository<${entity.name}, $keyObjectType> {

#foreach( $link in $entity.selectedLinks )
#if ($link.isCardinalityManyToOne())
	@RestResource(rel="by${link.targetEntityType}", path="by${link.targetEntityType}")
	public List<${entity.name}> findBy${link.targetEntityType} (
			@Param("${link.targetEntityType.toLowerCase()}") ${link.targetEntityType} ${link.targetEntityType.toLowerCase()});

#end
#end

}